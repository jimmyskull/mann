#ifndef TEST_INPUT_H_
#define TEST_INPUT_H_

#include <sstream>

#include "../lib/util.h"

namespace test {

class Simple {
 public:
  static auto points() {
    std::istringstream points(
        R"(-0.297462	0.176102
0.565538	-0.361496
0.909313	-0.182785
0.920712	0.478408
0.167682	0.0499836
0.305223	-0.0805835
0.114973	0.882453
0.742916	0.16376
0.0724605	-0.826775
0.690960	-0.559284
0.188485	-0.643934
0.749427	-0.942415
-0.970662	-0.223466
0.916110	0.879597
0.927417	-0.382593
-0.711327	0.278713
-0.519172	0.986146
0.135338	0.924588
-0.0837537	0.61687
0.0520465	0.896306
)");
    return util::read_points<double, 2>(points);
  }

  static auto queries() {
    std::istringstream points(
        R"(0.0902484	-0.207129
-0.419567	0.485743
0.826225	-0.30962
0.694758	0.987088
-0.410807	-0.465182
-0.836501	0.490184
0.588289	0.656408
0.325807	0.38721
-0.532226	-0.727036
-0.52506	-0.853508
)");
    return util::read_points<double, 2>(points);
  }
};

class SixDimensions {
 public:
  static auto points() {
    std::istringstream points(
        R"(-0.154833033  1.38530300 -0.4744001 -0.92224466  0.44569795 -0.92573129
 1.315205811  0.02573043  0.5684312 -2.34221773  0.44059377  1.28400315
-1.496018406  0.18415919 -1.9243237 -0.39703820  2.05428415 -0.13793637
 0.704612095  2.58351745 -0.7009208 -0.09723098 -1.21226635  0.34593169
 1.191611478 -0.74981497  0.6920674 -0.35784028 -1.03024126 -0.45067555
 0.698201446  0.19177347  0.4906579  0.11617647 -2.31472017 -0.96670216
 0.072887988 -1.14720713  0.1125321  1.43407572  0.71672545 -1.67187695
-1.346198211  1.19555592 -0.3410622 -0.21257045 -0.46547167  0.86650846
-1.276283456 -0.31422305  2.6469480 -1.47150429 -1.24781304 -0.32861156
-1.094408650 -0.41653105  0.2158244 -0.25546072 -0.09808901 -0.53385366
 0.007238409  0.09270612  0.7041643  0.54116251  1.13569341  1.38351911
-3.122492495  0.92851049 -0.2180707  0.63543376  0.58920150  0.45585160
 0.428054279 -1.63182524  0.1249689  0.65270384  0.73822869  0.32893428
 1.354457448 -0.84598465  2.1178344 -1.17299463  1.34949281 -0.74911411
 0.469411706 -0.58376613  0.1470164 -0.70226645 -1.28980985  0.68124893
 1.605786966 -0.10638804 -1.9744527 -0.90354147 -0.07477893 -1.51760197
-0.462326187  0.94803039 -0.7737925  0.01266995  0.31094172 -0.30066587
-1.007889021 -0.01604271  1.3210503  0.25524656  0.03325686 -1.50481748
 1.193159647 -1.56877735  1.3660447 -0.55938562  0.16708342  1.99407523
 0.501049199  0.92831667 -1.1518871 -1.34739032  0.50874810 -0.16114996
 1.850603933  1.33083099  0.6902879  0.64664731  0.45340012  0.01523453
-0.287754735 -1.07002866  1.5997269 -0.46403152  0.67041440 -0.73904304
 0.285424010  1.68780507  0.2474285 -0.41262628 -0.12060434  0.65756857
 0.488829045 -0.82228370  1.1036706 -0.50435395 -1.36569734 -0.43494106
-1.069486429  0.68242524  0.8473105 -0.05750942 -1.55818337  2.11744120
-0.002515854 -0.15304561 -1.5972847 -1.40584715 -1.42235357 -2.34996798
-0.482251938  1.06417738  0.6720004 -1.51700476 -0.15488302 -0.22245833
 0.758945437  0.92962793  0.7901218 -0.99004249 -0.74504935 -2.36743211
-0.317243993  0.87200488 -1.0464805 -0.59039589  1.54297601 -1.67588924
-0.158232286  1.09207159  1.3788169 -0.37982533  0.65290587 -1.57724784
)");
    return util::read_points<double, 6>(points);
  }
};

}  // namespace test

#endif  // TEST_INPUT_H_
